// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  password  String
  role      Role       @default(STUDENT)
  profile   Profile?
  toDos     ToDo[]
  notebooks Notebook[]
  studentin Class[]    @relation("ClassToUser")
  teacherof Class[]    @relation("Teacher")
  notes     Note[]
}

model Profile {
  id     Int    @id @default(autoincrement())
  name   String
  major  String
  year   Int
  user   User   @relation(fields: [userId], references: [id])
  userId Int    @unique
}

model Class {
  id          Int        @id @default(autoincrement())
  name        String
  password    String
  description String     @default("")
  teacher     User       @relation("Teacher", fields: [teacherId], references: [id])
  teacherId   Int
  students    User[]     @relation("ClassToUser")
  notebooks   Notebook[]
}

model ToDo {
  id      Int     @id @default(autoincrement())
  value   String
  done    Boolean
  owner   User    @relation(fields: [ownerId], references: [id])
  ownerId Int
}

enum Role {
  STUDENT
  TEACHER
}

model Notebook {
  id        Int      @id @default(autoincrement())
  name      String
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   Int
  class     Class?    @relation(fields: [classId], references: [id])
  classId   Int?
  notes     Note[]
  favorited Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Note {
  id         Int      @id @default(autoincrement())
  title      String
  author     User     @relation(fields: [authorId], references: [id])
  authorId   Int
  content    String?   @default("")
  notebook   Notebook @relation(fields: [notebookId], references: [id])
  notebookId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
